/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto1;

import Libreria.NumeroLinea;
import Analizadores.*;
import Configuracion.Lexico_Configuracion;
import Configuracion.Proyecto;
import Configuracion.Sintactico_Configuracion;
import Instrucciones.*;
import Reportes.Reporte_Errores;
import Reportes.Reporte_Tabla;
import Tabla_Simbolos.TablaDeSimbolos;
import java.io.BufferedReader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.LinkedList;
import Tipos_Importantes.Error;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Hashtable;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 *
 * @author Andree
 */
public class Principal extends javax.swing.JFrame {

    public static ArrayList<Error> Lista_Errores_Semanticos = new ArrayList<>();
    public static ArrayList<Error> Lista_Errores_Lexicos = new ArrayList<>();
    public static ArrayList<Error> Lista_Errores_Sintacticos = new ArrayList<>();
    public static ArrayList<String> salida = new ArrayList<>();
    NumeroLinea numerolinea;
    public static boolean escribiendo = false;
    public static String ruta_estatica = "C:/Users/Andree/Desktop";
    public static String ruta_main = "C:/Users/Andree/Desktop";
    public static BufferedWriter buffer;
    public static boolean write = true;
    public static String clase_actual = "principal";
    public static JPanel ventana_actual;
    public static JFrame frame;
    RSyntaxTextArea textArea;
    public static TablaDeSimbolos tabla_final = new TablaDeSimbolos();
    public static Hashtable<String, String> pesta√±as = new Hashtable<>();
    public static Hashtable<String, String> clases_proyecto = new Hashtable<>();
    public static String ruta_guardar = "C:/Users/Andree/Desktop";
    public static String ruta_olc = "";

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
//        textArea = new RSyntaxTextArea(434, 755);
//        textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_C);
//        textArea.setCodeFoldingEnabled(true);
//
//        RTextScrollPane sp = new RTextScrollPane(textArea);
//        sp.setAutoscrolls(true);
//        sp.setLineNumbersEnabled(true);
//        sp.setIconRowHeaderEnabled(true);
//
//        tabs.add(sp, "Default");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tabs = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        consola = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Primer Proyecto OLC2");

        jButton1.setText("Nuevo Archivo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Nuevo Proyecto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Abrir Proyecto");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Guardar Proyecto");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Correr Proyecto");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        consola.setBackground(new java.awt.Color(0, 0, 0));
        consola.setColumns(20);
        consola.setForeground(new java.awt.Color(255, 255, 255));
        consola.setRows(5);
        jScrollPane3.setViewportView(consola);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Abrir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Abrir Proyecto");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Nuevo Proyecto");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Nuevo Archivo");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("Configurar archivo Principal");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setText("Guardar Archivo");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setText("Guardar Proyecto");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Reportes");

        jMenuItem9.setText("Errores ");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuItem10.setText("Tabla de Simbolos");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    String ruta_configuracion = "";
    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        String ruta_relativa = JOptionPane.showInputDialog(null, "Escriba el nombre de la ruta relativa");

        String carpeta_raiz = JOptionPane.showInputDialog(null, "Escriba el nombre de la carpeta raiz");

        String nombre_correr = JOptionPane.showInputDialog(null, "Escriba el nombre de la clase principal con extension. (Opcional) ");

        JFileChooser selectorArchivos = new JFileChooser();
        selectorArchivos.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        selectorArchivos.showOpenDialog(this);

        String ruta_carpeta = selectorArchivos.getSelectedFile().getAbsoluteFile() + "\\";

        File archivo = new File(ruta_carpeta + "configuracion.olc");
        BufferedWriter bw;
        try {
            File fileRoot = new File(ruta_carpeta);
            crearConfiguracion(fileRoot, 3);
            ruta_configuracion = "{\n";
            ruta_configuracion += "\t proyecto:{\n";
            ruta_configuracion += "\t\t ruta:\"" + ruta_relativa + "\",\n";
            ruta_configuracion += "\t\t nombre:\"" + carpeta_raiz + "\",\n";
            ruta_configuracion += "\t\t correr:\"" + nombre_correr + "\",\n";
            ruta_configuracion += "\t\t configuracion: {\n";
            crearConfiguracion(fileRoot, 3);
            ruta_configuracion += "\t\t }\n";
            ruta_configuracion += "\t}\n";
            ruta_configuracion += "}";
            bw = new BufferedWriter(new FileWriter(archivo));
            bw.write(ruta_configuracion);
            bw.close();
        } catch (IOException ex) {

        }

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void crearConfiguracion(File root, int numtabs) {

        File[] subItems = root.listFiles();
        int contador = 0;
        for (File file : subItems) {

            if (file.isFile()) {
                Date d = new Date(file.lastModified());
                Calendar c = new GregorianCalendar();
                c.setTime(d);

                String dia, mes, annio, hora, minuto, segundo;

                dia = Integer.toString(c.get(Calendar.DATE));
                mes = Integer.toString(c.get(Calendar.MONTH));
                annio = Integer.toString(c.get(Calendar.YEAR));
                hora = Integer.toString(c.get(Calendar.HOUR_OF_DAY));
                minuto = Integer.toString(c.get(Calendar.MINUTE));
                segundo = Integer.toString(c.get(Calendar.SECOND));
                ruta_configuracion += getTabulaciones(numtabs) + "archivo:{\n";
                numtabs++;
                ruta_configuracion += getTabulaciones(numtabs + 1) + "nombre: \"" + file.getName() + "\",\n"
                        + getTabulaciones(numtabs + 1) + "fecha_mod: \"" + dia + "/" + mes + "/" + annio + "   " + hora + ":" + minuto + ":" + segundo + "\"\n";
                ruta_configuracion += getTabulaciones(numtabs + 1) + "}";
                numtabs--;
            } else if (file.isDirectory()) {
                ruta_configuracion += getTabulaciones(numtabs) + "carpeta:{ \n" + getTabulaciones(numtabs + 1) + "nombre:\"" + file.getName() + "\",\n";
                crearConfiguracion(file, numtabs + 2);
                ruta_configuracion += getTabulaciones(numtabs + 1) + "}";
            }
            if (contador == subItems.length - 1) {
                ruta_configuracion += "\n";
            } else {
                ruta_configuracion += ",\n";
            }
            contador++;

        }

    }

    private String getTabulaciones(int numero) {
        String tabs = "";
        for (int i = 0; i < numero; i++) {
            tabs += "\t";
        }
        return tabs;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            crearClase();
        } catch (FileNotFoundException ex) {

        } catch (IOException ex) {

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        guardarProyecto();

        String input = "";
        if (clase_actual.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe configurar el archivo olc primero");
            return;
        }

        if (!clase_actual.contains(".r")) {
            Principal.add_error("No se puede iniciar con un tipo diferente a .r", "Semantico", -1, -1);
        }

        String ruta_main2;
        if (!clases_proyecto.containsKey(clase_actual)) {
            Principal.add_error("No existe la clase " + clase_actual + " en el proyecto", "Semantico", -1, -1);
            return;
        }

        ruta_main2 = clases_proyecto.get(clase_actual) + clase_actual;
        ruta_main = clases_proyecto.get(clase_actual);
        ruta_guardar = ruta_main;
        try (Scanner input2 = new Scanner(new File(ruta_main2))) {
            while (input2.hasNextLine()) {
                input += input2.nextLine() + "\n";
            }
        } catch (FileNotFoundException ex) {

        }
        Lista_Errores_Semanticos.clear();
        salida.clear();
        consola.setText("");
        Sintactico parser = new Sintactico(new Lexico(new BufferedReader(new StringReader(input))));
        TablaDeSimbolos global = new TablaDeSimbolos();
        try {
            parser.parse();
            LinkedList<Instruccion> AST = parser.AST;

            consola.append("--------------------- Inicio de la recoleccion ---------------------\n");
            //Recolecatamos primero
            AST.forEach((item) -> {
                item.Recolectar(global);
            });
            consola.append("--------------------- Final de la recoleccion ---------------------\n");

            consola.append("---------------------  Inicio de la ejecucion   ---------------------\n");
            //Ejecutamos segundo
            //vamos ejecutando importaciones, declaraciones, asignaciones, definiciones y buscamos el main
            AST.forEach((item) -> {
                switch (item.getType()) {
                    //no ejecuta metodos
                    case FUNCION:
                        break;
                    case METODO:
                        Metodo aux = (Metodo) item;
                        //verificamos si es el metodo main
                        if (aux.id.equals("main")) {
                            aux.Llamada = true;
                            global.setPadre(null);
                            aux.Ejecutar(global);
                        } else {
                            //no ejecutamos el metodo
                        }
                        break;
                    case INICIO_VENTANA:
                        break;
                    default:
                        item.Ejecutar(global);
                        break;
                }
            });

        } catch (Exception e) {
            consola.append("---------------------  Error de Compilacion   ---------------------");
        }

        tabla_final = global;

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        abrirProyecto();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void abrirProyecto() {

        // TODO add your handling code here:
        // muestra el cuadro de di√°logo de archivos, para que el usuario pueda elegir el archivo a abrir
        JFileChooser selectorArchivos = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos OLC", "olc");
        selectorArchivos.setFileFilter(filter);
        selectorArchivos.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        int num = selectorArchivos.showOpenDialog(this);

        File archivo = selectorArchivos.getSelectedFile();

        ruta_olc = archivo.getAbsolutePath();

        if ((archivo == null) || (archivo.getName().equals(""))) {
            JOptionPane.showMessageDialog(this, "Nombre de archivo inv√°lido", "Nombre de archivo inv√°lido", JOptionPane.ERROR_MESSAGE);
        }
        Scanner scn;

        String texto = "";

        try {
            scn = new Scanner(archivo);
            while (scn.hasNext()) {
                texto += scn.nextLine() + "\n";
            }
            Sintactico_Configuracion parser = new Sintactico_Configuracion(new Lexico_Configuracion(new BufferedReader(new StringReader(texto))));
            parser.parse();
            Proyecto pr = parser.arbol_configuracion;
            pr.crearArbol();
            jScrollPane1.setViewportView(pr.arbol);
        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }


    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        Reporte_Errores re = new Reporte_Errores(Lista_Errores_Lexicos, Lista_Errores_Sintacticos, Lista_Errores_Semanticos);
        try {
            JEditorPane editor = new JEditorPane();
            editor.setContentType("text/html");
            editor.setText(re.crear_Reporte());
            JScrollPane scrollPane = new JScrollPane(editor);
            JFrame errores = new JFrame("Tabla de errores");
            errores.setSize(1000, 750);
            errores.add(scrollPane);

            errores.setVisible(true);
        } catch (IOException ex) {

        }

    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        Reporte_Tabla tabla = new Reporte_Tabla(tabla_final);

        try {
            JEditorPane editor = new JEditorPane();
            editor.setContentType("text/html");
            editor.setText(tabla.reporte_Tabla());
            JScrollPane scrollPane = new JScrollPane(editor);
            JFrame errores = new JFrame("Tabla de Simbolos");
            errores.setSize(1000, 750);
            errores.add(scrollPane);

            errores.setVisible(true);
        } catch (IOException ex) {

        }

    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        abrirProyecto();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            nuevo_proyecto();
        } catch (IOException ex) {
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void nuevo_proyecto() throws IOException {
        String nombre_proyecto = JOptionPane.showInputDialog(null, "Nombre de proyecto");
        String ruta_alternativa = "C:\\Users\\Andree\\Desktop\\";
        File carpeta = new File(ruta_alternativa + nombre_proyecto);
        carpeta.mkdirs();
        File archivo = new File(ruta_alternativa + nombre_proyecto + "\\configuracion.olc");
        BufferedWriter bw;
        bw = new BufferedWriter(new FileWriter(archivo));
        bw.close();
        archivo = new File(ruta_alternativa + nombre_proyecto + "\\main.r");
        bw = new BufferedWriter(new FileWriter(archivo));
        bw.write("//Proyecto creado por IDE RMB");
        bw.close();

    }


    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        guardarClase();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        guardarProyecto();
        JOptionPane.showMessageDialog(null, "Proyecto Guardado");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        guardarProyecto();
        JOptionPane.showMessageDialog(null, "Proyecto Guardado");
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    public void guardarClase() {
        String name = tabs.getTitleAt(tabs.getSelectedIndex());
        RTextScrollPane ob = (RTextScrollPane) tabs.getSelectedComponent();
        RSyntaxTextArea txta = (RSyntaxTextArea) ob.getTextArea();

        String ruta = clases_proyecto.get(name) + name;

        FileWriter fichero = null;
        PrintWriter pw = null;
        try {
            fichero = new FileWriter(ruta);
            pw = new PrintWriter(fichero);
            pw.print(txta.getText());

        } catch (IOException e) {
        } finally {
            try {
                if (null != fichero) {
                    fichero.close();
                }
            } catch (IOException e2) {
            }
        }
        JOptionPane.showMessageDialog(null, "Clase Guardada");
    }

    private void guardarProyecto() {

        FileWriter fichero;
        PrintWriter pw;
        for (int i = 0; i < tabs.getTabCount(); i++) {
            String name = tabs.getTitleAt(i);
            RTextScrollPane ob = (RTextScrollPane) tabs.getComponentAt(i);
            RSyntaxTextArea txta = (RSyntaxTextArea) ob.getTextArea();
            String ruta = clases_proyecto.get(name) + name;

            fichero = null;
            pw = null;
            try {
                fichero = new FileWriter(ruta);
                pw = new PrintWriter(fichero);
                pw.print(txta.getText());

            } catch (IOException e) {
            } finally {
                try {
                    if (null != fichero) {
                        fichero.close();
                    }
                } catch (IOException e2) {
                }
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    public static void add_error(String error, String tipo, int line, int column) {
        Lista_Errores_Semanticos.add(new Error(error, tipo, clase_actual, line + 1, column + 1));
    }

    public static void add_error_lexico(String error, String tipo, int line, int column) {
        Lista_Errores_Lexicos.add(new Error(error, tipo, clase_actual, line + 1, column + 1));
    }

    public static void add_error_sintactico(String error, String tipo, int line, int column) {
        Lista_Errores_Sintacticos.add(new Error(error, tipo, clase_actual, line + 1, column + 1));
    }

    public static void setMensaje(String mensaje) {
        consola.append(mensaje + "\n");
    }

    public static void addTab(String ruta) throws FileNotFoundException {
        String rutas2[] = ruta.split("/");

        String nombre = rutas2[rutas2.length - 1];

        if (nombre.contains(".")) {
            String ruta_temp = clases_proyecto.get(nombre);

            if (!pesta√±as.containsKey(nombre)) {

                String line = "";
                try (Scanner input = new Scanner(new File(ruta_temp + nombre))) {
                    while (input.hasNextLine()) {
                        line += input.nextLine() + "\n";
                    }
                }

                RSyntaxTextArea textArea = new RSyntaxTextArea(434, 755);
                textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_C);
                textArea.setCodeFoldingEnabled(true);
                textArea.setText(line);
                RTextScrollPane sp = new RTextScrollPane(textArea);
                sp.setAutoscrolls(true);
                sp.setLineNumbersEnabled(true);
                sp.setIconRowHeaderEnabled(true);
                pesta√±as.put(nombre, ruta);
                tabs.add(sp, nombre);
            }
        } else {
            ruta_guardar = ruta + "/";
        }
    }

    private void crearClase() throws FileNotFoundException, IOException {
        String name = JOptionPane.showInputDialog("Nombre de clase con extension (.r|.m|.b");
        if (!name.contains(".")) {
            JOptionPane.showMessageDialog(null, "No es posible crear la clase sin extension");
        }

        File archivo = new File(ruta_guardar + name);
        BufferedWriter bw;
        bw = new BufferedWriter(new FileWriter(archivo));
        bw.close();
        clases_proyecto.put(name, ruta_guardar);
        addTab(ruta_guardar + name);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextArea consola;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JTabbedPane tabs;
    // End of variables declaration//GEN-END:variables
}
